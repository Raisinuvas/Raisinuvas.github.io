<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>leetcode面试150题——简单题</title>
    <link href="/2024/03/16/leetcode%E9%9D%A2%E8%AF%95150%E9%A2%98%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95%E9%A2%98/"/>
    <url>/2024/03/16/leetcode%E9%9D%A2%E8%AF%95150%E9%A2%98%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="数组-字符串"><a href="#数组-字符串" class="headerlink" title="数组&#x2F;字符串"></a>数组&#x2F;字符串</h1><h2 id="题14-最长公共前缀"><a href="#题14-最长公共前缀" class="headerlink" title="题14.最长公共前缀"></a>题14.最长公共前缀</h2><blockquote><p><strong>题目描述</strong>：编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，返回空字符串 <code>&quot;&quot;</code>。</p><p><strong>示例 1：</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs armasm">输入：<span class="hljs-keyword">strs</span> = [<span class="hljs-string">&quot;flower&quot;</span>,<span class="hljs-string">&quot;flow&quot;</span>,<span class="hljs-string">&quot;flight&quot;</span>]<br>输出：<span class="hljs-string">&quot;fl&quot;</span><br></code></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs armasm">输入：<span class="hljs-keyword">strs</span> = [<span class="hljs-string">&quot;dog&quot;</span>,<span class="hljs-string">&quot;racecar&quot;</span>,<span class="hljs-string">&quot;car&quot;</span>]<br>输出：<span class="hljs-string">&quot;&quot;</span><br>解释：输入不存在公共前缀。<br></code></pre></td></tr></table></figure></blockquote><p>​<strong>低配版解法</strong>：初始化公共前缀为第一个字符串。循环遍历字符串，当前字符串B和公共前缀A进行比较，子循环以B的长度为上界，逐个字符进行比较，直到字符不相等。若A还有剩余，则删掉A剩下的元素(后面为多出来的不相等的部分)，以此类推，直到遍历完字符串。</p><p>​解题的时候考虑两类特殊情况：1）若该字符串数组中仅有一个字符串，则直接返回该字符串（最开始判断即可）。2）所有字符串都不一样，即不存在公共前缀。由于默认数组中的第一个字符串为第一个公共前缀，且公共前缀中会一直存储内容。因此需要设置一个flag位，来应对这种情况，若在while循环处，每一个字符都不想等，只要这种情况存在，即j&#x3D;0，则将flag置为1，这种情况下一定不存在公共前缀。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">string <span class="hljs-title">longestCommonPrefix</span><span class="hljs-params">(vector&lt;string&gt;&amp; strs)</span> </span>&#123;<br>        string s;<br>        string common_str = strs[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">int</span> i, j;<br>        <span class="hljs-type">int</span> flag = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span>(strs.<span class="hljs-built_in">size</span>() == <span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">return</span> common_str;<br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">1</span>; i &lt; strs.<span class="hljs-built_in">size</span>(); i++)&#123;<br>            s = strs[i];<br>            j = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span>(s[j] == common_str[j] <span class="hljs-keyword">and</span> j &lt; s.<span class="hljs-built_in">size</span>())&#123;<br>                j++;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(j == <span class="hljs-number">0</span>)&#123;<br>                flag = <span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            j--;<br>            <span class="hljs-keyword">if</span>(j &lt; common_str.<span class="hljs-built_in">size</span>())<br>                common_str.<span class="hljs-built_in">erase</span>(j + <span class="hljs-number">1</span>, common_str.<span class="hljs-built_in">size</span>()-j);<br>        &#125;<br>        <span class="hljs-keyword">if</span>(flag == <span class="hljs-number">1</span>)<br>            common_str = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">return</span> common_str;<br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure><p>官方题解：</p><p>总体上思路类似（泪目了，难得）。但是在处理没有最长公共前缀的情况下，官方用了<code>return str1.substr(0, index)</code>，直接将重叠的部分用<code>substr</code>函数覆盖，学到了学到了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">string <span class="hljs-title">longestCommonPrefix</span><span class="hljs-params">(vector&lt;string&gt;&amp; strs)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (!strs.<span class="hljs-built_in">size</span>()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>        &#125;<br>        string prefix = strs[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">int</span> count = strs.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; count; ++i) &#123;<br>            prefix = <span class="hljs-built_in">longestCommonPrefix</span>(prefix, strs[i]);<br>            <span class="hljs-keyword">if</span> (!prefix.<span class="hljs-built_in">size</span>())<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> prefix;<br>    &#125;<br>    <span class="hljs-function">string <span class="hljs-title">longestCommonPrefix</span><span class="hljs-params">(<span class="hljs-type">const</span> string&amp; str1, <span class="hljs-type">const</span> string&amp; str2)</span> </span>&#123;<br>        <span class="hljs-type">int</span> length = <span class="hljs-built_in">min</span>(str1.<span class="hljs-built_in">size</span>(), str2.<span class="hljs-built_in">size</span>());<br>        <span class="hljs-type">int</span> index = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (index &lt; length &amp;&amp; str1[index] == str2[index]) &#123;<br>            ++index;<br>        &#125;<br>        <span class="hljs-keyword">return</span> str1.<span class="hljs-built_in">substr</span>(<span class="hljs-number">0</span>, index);<br>    &#125;<br>&#125;;<br>作者：力扣官方题解<br>链接：https:<span class="hljs-comment">//leetcode.cn/problems/longest-common-prefix/solutions/288575/zui-chang-gong-gong-qian-zhui-by-leetcode-solution/</span><br>来源：力扣（LeetCode）<br></code></pre></td></tr></table></figure><h1 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h1><h2 id="题383-赎金信"><a href="#题383-赎金信" class="headerlink" title="题383.赎金信"></a>题383.赎金信</h2><blockquote><p>给你两个字符串：<code>ransomNote</code> 和 <code>magazine</code> ，判断 <code>ransomNote</code> 能不能由 <code>magazine</code> 里面的字符构成。</p><p>如果可以，返回 <code>true</code> ；否则返回 <code>false</code> 。</p><p><code>magazine</code> 中的每个字符只能在 <code>ransomNote</code> 中使用一次。</p><p><strong>示例 1：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">输入：ransomNote = <span class="hljs-string">&quot;a&quot;</span>, magazine = <span class="hljs-string">&quot;b&quot;</span></span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">输出：<span class="hljs-literal">false</span></span><br></code></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">输入：ransomNote = <span class="hljs-string">&quot;aa&quot;</span>, magazine = <span class="hljs-string">&quot;ab&quot;</span></span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">输出：<span class="hljs-literal">false</span></span><br></code></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">输入：ransomNote = <span class="hljs-string">&quot;aa&quot;</span>, magazine = <span class="hljs-string">&quot;aab&quot;</span></span><br><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">输出：<span class="hljs-literal">true</span></span><br></code></pre></td></tr></table></figure></blockquote><p>第一次做hash表的题，暂时没有想到很好的思路，以为是不是有什么不知道的哈希表相关操作，所以直接看<strong>官方题解</strong>了：</p><p><code>ransomNote</code>为待构建的字符串，由于<code>ransomNote</code>中的字符只能使用一次，只需要<code>magazine</code>中的每个英文字母的统计次数都大于<code>ransomNote</code>中字母的统计次数。首先排除特殊情况，如果<code>ransomNote</code>的字符数大于<code>magazine</code>，则显然不能构成。否则首先统计<code>magzine</code>中的字符统计，记录在一个向量中，随后遍历<code>ransomNote</code>，出现一次，就在cnt中-1（这里还是很巧妙的），如果cnt中存在字母的统计量为负，则<code>false</code>，否则<code>true</code></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> &#123;<br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">canConstruct</span><span class="hljs-params">(string ransomNote, string magazine)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (ransomNote.<span class="hljs-built_in">size</span>() &gt; magazine.<span class="hljs-built_in">size</span>()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">cnt</span><span class="hljs-params">(<span class="hljs-number">26</span>)</span></span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; c : magazine) &#123;<br>            cnt[c - <span class="hljs-string">&#x27;a&#x27;</span>]++;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp; c : ransomNote) &#123;<br>            cnt[c - <span class="hljs-string">&#x27;a&#x27;</span>]--;<br>            <span class="hljs-keyword">if</span> (cnt[c - <span class="hljs-string">&#x27;a&#x27;</span>] &lt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>&#125;;<br><br>作者：力扣官方题解<br>链接：https:<span class="hljs-comment">//leetcode.cn/problems/ransom-note/solutions/1135839/shu-jin-xin-by-leetcode-solution-ji8a/</span><br>来源：力扣（LeetCode）<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>leetcode</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo常用命令</title>
    <link href="/2024/03/11/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2024/03/11/Hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="创建Blog相关命令"><a href="#创建Blog相关命令" class="headerlink" title="创建Blog相关命令"></a>创建Blog相关命令</h1><h2 id="1、新建blog"><a href="#1、新建blog" class="headerlink" title="1、新建blog"></a>1、新建blog</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new [layout] &quot;title&quot;<br></code></pre></td></tr></table></figure><p>layout是文章的布局，默认为post，title为文章标题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">C:\Users\Yuxin Song\Blog_hexo\hexo-blog&gt;hexo new post &quot;Hexo常用命令&quot;<br>INFO  Validating config<br>INFO  Created: ~\Blog_hexo\hexo-blog\source\_posts\Hexo常用命令.md<br></code></pre></td></tr></table></figure><ul><li><p>Front-matter设置</p><p>Front-matter 是文章最上方以—分隔的区域，用于指定文章的变量设置</p></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">hexo学习</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-09-16 19:33:46</span><br><span class="hljs-attr">tags:</span> <span class="hljs-string">hexo</span><br><span class="hljs-attr">categories:</span> <span class="hljs-string">其他</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>可以进行相应的变量设置</p><h2 id="2、Blog发布"><a href="#2、Blog发布" class="headerlink" title="2、Blog发布"></a>2、Blog发布</h2><p>写完之后输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录一哈C++学习规划</title>
    <link href="/2024/03/10/%E8%AE%B0%E5%BD%95%E4%B8%80%E5%93%88C-%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/"/>
    <url>/2024/03/10/%E8%AE%B0%E5%BD%95%E4%B8%80%E5%93%88C-%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h1 id="C-学习规划"><a href="#C-学习规划" class="headerlink" title="C++学习规划"></a>C++学习规划</h1><h2 id="第一步：基础"><a href="#第一步：基础" class="headerlink" title="第一步：基础"></a>第一步：基础</h2><h3 id="基础类（必看）"><a href="#基础类（必看）" class="headerlink" title="基础类（必看）"></a>基础类（必看）</h3><p>《C程序设计语言》</p><p>1、学习指针，了解到了内存管理最基本的东西，给以后学操作系统课程有一个印象。</p><p>2、学习从代码到可执行程序，了解整个代码到生成产物的过程，给以后学编译原理埋下伏笔。</p><p>一些学习用的网站</p><ul><li>W3Cschool教程：<a href="https://www.w3cschool.cn/cpp/">https://www.w3cschool.cn/cpp/</a></li><li>菜鸟教程：<a href="https://www.runoob.com/cplusplus/cpp-tutorial.html">https://www.runoob.com/cplusplus/cpp-tutorial.html</a></li></ul><p>《C++ Primer》</p><p>不懂的地方时常去翻一翻</p><p>![image-20240311212053425](C:\Users\Yuxin Song\Blog_hexo\hexo-blog\source_posts\记录一哈C-学习规划\image-20240311212053425.png)</p>]]></content>
    
    
    <categories>
      
      <category>C++基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>转载自汤姆猫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>这是一个很短的Flag......</title>
    <link href="/2024/03/10/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BE%88%E7%9F%AD%E7%9A%84Flag/"/>
    <url>/2024/03/10/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BE%88%E7%9F%AD%E7%9A%84Flag/</url>
    
    <content type="html"><![CDATA[<p>今天你Ctrl+C了吗？</p><img src="/2024/03/10/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%BE%88%E7%9F%AD%E7%9A%84Flag/wallhaven-p8j1zm.jpg" class="" title="This is an example image">]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/03/10/hello-world/"/>
    <url>/2024/03/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
